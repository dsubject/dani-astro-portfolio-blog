---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;

const { pathname } = Astro.url;
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + subpath?.[0];
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<slot />
</a>
<style>
  a {
    display: inline-block;
    text-decoration: none;
    position: relative; 
	margin: 0 10px;
  }

  a.active {
    font-weight: bolder;
  }

  a::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 2px; /* Thickness of the underline */
    bottom: 0;
    left: 0;
    background-color: var(--text); /* Uses the text color */
    visibility: hidden;
    transform: scaleX(0);
    transition: all 0.3s ease-in-out;
  }

  html.light a::after{
    background-color: var(--text-light);
  }

  a:hover::after {
    visibility: visible;
    transform: scaleX(1);
  }

  a.active::after {
    visibility: visible;
    transform: scaleX(1);
  }
</style>
